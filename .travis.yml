language: python
branches:
  only:
    - master
python:
  - "3.4"
  - "3.5"
  - "3.6"
  - "3.7"
  - "3.8"
  # - "3.7-dev" # pyyaml not ready yet

before_install:
  - sudo apt-get -qq update
  - sudo apt-get install -y expect

# command to install dependencies
install:
  - pip install -r requirements-dev.txt
  - pip install .
script:
  # Run flake8 on all .py files in all subfolders
  - find . -name \*.py -exec flake8 {} +

  # Scan for known security issues
  - bandit -r .

  # run tests
  - | # default repo setup
      bash .travis/setup-ssh.sh
  - |
      bash .travis/tests/git-cd-version.sh
  - |
      bash .travis/clone-test-repo.sh
  - | # check git-cd upgrade
      bash .travis/tests/git-cd-upgrade.sh
  - | # default git-cd workflow
      bash .travis/tests/git-cd-init.sh
  - |
      bash .travis/tests/git-cd-start.sh
  - |
      bash .travis/git-add-build.sh
  - |
      bash .travis/tests/git-cd-refresh.sh
  - |
      bash .travis/tests/git-cd-review.sh
  - |
      bash .travis/tests/git-cd-finish.sh
  - |
      bash .travis/tests/git-cd-release.sh
  - | # git-cd test compare and clean
      bash .travis/tests/git-cd-test.sh
  - |
      bash .travis/tests/git-cd-compare.sh
  - |
      bash .travis/tests/git-cd-clean.sh
  - | # make a release by date format
      bash .travis/tests/git-cd-init-release-date.sh
  - |
      bash .travis/tests/git-cd-release-date.sh
  - |
      bash .travis/git-reset.sh
  - | # make a release by version file and extra command
      bash .travis/tests/git-cd-init-release-file.sh
  - |
      bash .travis/tests/git-cd-release-file.sh
  - |
      bash .travis/git-reset.sh


env:
  global:
    - secure: "gh+8ceEarA3KYPg/Fg1vS52a8+KOdj//UwOL48ZfumOagXs2u8d3mSa61BVukroa34QKJa89UY318AtXU+LCeQk/w7SMUpL0bCqLxefdo2/DfJZqAiX74Ema5VYENi6mbRdzC9dS5rRbG04m7p3vWxahs2LPZF7J+NFZAdgZqyThbDYfb9Qa/lKunq86b60iUmlj+rfLGfRJLlm/o5Iet3SBq0ktUXflEjltWuPLNwgPPoxOITrFNZG+GPsATepKKWIweLr/jJIoSa1SpHCcxMuHrdsFPhpIFLffmCnVIORSZe4l6tbDhGntQjR4J7mhULT8uqrG92Nl6QoNBpEP4UYigI+9qLnVdQGvKznbps9M4udvGBjs4UvR91d5Kjhbr7upH+DzRuVzRxfNNCLF4j+p9Vr2uZbXoaZovGExVcraUbNJBUW/xlDHXntRzytQhomoaaBWheODrSAvBXUx0j3QlGJMcFhHdHQs5hX7EwRY2xb8Dzd83B0iqAMDizeXuQuObjIUKq0CzD1z7viaBUhDFgDyzWiWB7vKHb2L4Lxfwb0JK0cw81l9XkbsYB99DD2MaO78yR/DzYUjHXqi9EPSZslGYum4YY46gUrdoaUSqcN+pmbpdUfjIVPM/o6ap9j2mScHn3uUKDXn9qRTRecOEwleT9uNohKBRFjA0wM="
